#include "/home/cmpt201/a8-yinkak/include/shell.h"
#include "msgs.h"
#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <unistd.h>
void execute_fg(const char *command) // execute foreground process
{
  pid_t child = fork(); // creates a child process

  if (child == -1) {
    perror(FORK_ERROR_MSG);
    exit(EXIT_FAILURE);
  }
  if (child == 0) {
    // child process
    if (execlp(command, command, NULL) == -1) {
      perror(EXEC_ERROR_MSG);
      exit(EXIT_FAILURE);
    }
  } else {
    // parent process
    int wstatus;
    waitpid(child, &wstatus, 0);
  }
}

void execute_bg(const char *command) {
  // background execution
  pid_t child = fork();
  if (child == -1) {
    perror(FORK_ERROR_MSG);
    exit(EXIT_FAILURE);
  }
  if (child == 0) {
    if (execlp(command, command, NULL) == -1) {
      perror(EXEC_ERROR_MSG);
      exit(EXIT_FAILURE);
    }
  } else {
    // parent process
    yinka_print("running in background");
  }
}
