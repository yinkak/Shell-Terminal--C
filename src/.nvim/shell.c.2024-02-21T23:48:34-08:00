#include "/home/cmpt201/a8-yinkak/include/shell.h"
#include "msgs.h"
#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <unistd.h>
// main function
int main() {
  char command[120];

  while (1) {
    display_prompt();//print cwd as a prompt
    
    read_command(command, strlen(command)); //read command from user
    //check for zombie processes
    int wstatus = 0;
    pid_t zombies;
    while((zombies = waitpid(-1, &wstatus, WNOHANG)) > 0){
      printf( "zombie process: %d/n", zombies);
    }
    //tokenize user input commands
    if(command[0] == '\0'){
      continue;
    }
    else{
      char* args[120];//take in args with a max length of 120
      char *token;
      char *anchor;

      token = strtok_r(command, " ", &anchor);//initialize seperator for arguements with " "
      int count = 0;//initialize arguement count to 0
      while (token != NULL){
        args[count] = token;
        token = strtok_r(NULL, " ", &anchor);
        count++;
        if (count >= 120){
          break;
        }
      }
    
      args[count] = NULL; //terminate with NULL 

    yinka_print(command);

    if (args[0] == NULL){
      continue;
    }
    if(strcmp(args[count -1], "&") == 0){
      args[count -1] = NULL; //remove the & from the command line arguement
      execute_bg(command, args); // execute the command as a background process
    }
    else{
      execute_fg(command, args);//execute the command as a foreground process
      }

    

  }
  }
  return 0;
}

