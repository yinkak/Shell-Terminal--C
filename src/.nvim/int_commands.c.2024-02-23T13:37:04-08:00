#include "msgs.h"
#include "shell.h"
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>//for PATH_MAx variable
#include <sys/types.h>
#include <unistd.h>
// internal commands
void execute_exit() {
  yinka_print("exiting shell...\n");
  exit(EXIT_SUCCESS);
}

void execute_pwd() {
  char *cwd;
  if (getcwd(cwd, sizeof(cwd)) != NULL) {
    yinka_print(cwd); // Print the cwd
  }
  /*else {
    char *msg = FORMAT_MSG("pwd", GETCWD_ERROR_MSG);
    write(STDERR_FILENO, msg, strlen(msg));
    exit(EXIT_FAILURE);
  }*/
}

void execute_help() {
  char *pwd = FORMAT_MSG("pwd", PWD_HELP_MSG);
  write(STDERR_FILENO, pwd, strlen(pwd));

  char *exit = FORMAT_MSG("exit", EXIT_HELP_MSG);
  write(STDERR_FILENO, exit, strlen(exit));

  char *cd = FORMAT_MSG("cd", CD_HELP_MSG);
  write(STDERR_FILENO, cd, strlen(cd));

  char *help = FORMAT_MSG("help", HELP_HELP_MSG);
  write(STDERR_FILENO, help, strlen(help));

  char *ext = FORMAT_MSG("external command", EXTERN_HELP_MSG);
  write(STDERR_FILENO, ext, strlen(ext));
}

void execute_cd(char *arg){
  char curdir[1024];//1024 is the maximum path length
  char lastdir[1024];
  char path[1024];


}
